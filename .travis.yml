dist: xenial
env:
  global:
    - GH_REPO_NAME: hypro
    - DOXYFILE: $TRAVIS_BUILD_DIR/build/docs/Doxygen
    - GH_REPO_REF: github.com/hypro/hypro.git
    - secure: "VrgSZAgTRTdH1rq0OHXHtArOA5SyLsJX9YA9O5c+PSXI/drMjc3pGsTIK3NA7xcyGaEIT+DjzV36yxvAz/3uurYkFtiz/sl1suziy6nSNBqvQSE01lBU9GnqHpkPg6/alnijG0Bf3KvXTdw5MmRaK+f9corNJAa+s1sP0rP7WMQ="

language: cpp
branches:
  only:
    - master
    - alpha

notifications:
  email:
    recipients:
      - stefan.schupp@cs.rwth-aachen.de
  slack:
    rooms:
      - hypro:v2n2cgATRJJYPctLTL1MSfOn#github

#sudo: required

# caching
cache:
  directories:
    - build/carl

addons:
  apt:
    sources: &sources_base
      - ubuntu-toolchain-r-test
    packages: &packages_base
      - uuid-dev
      - openjdk-9-jre

jobs:
  fast_finish: true
  include:
    - os: linux
      compiler: g++-7
      addons:
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-7, gcc-7, doxygen, graphviz, texlive-base]
      env: COMPILER=g++-7 FLAGS=-DCREATE_DOC=ON CC=gcc-7 CXX=g++-7
    - os: linux
      compiler: g++-8
      addons:
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-8, gcc-8]
      env: COMPILER=g++-8 CC=gcc-8 CXX=g++-8
    - os: linux
      compiler: g++-9
      addons:
        sonarcloud:
          organization: "hypro-github"
          token:
            secure: "ISgh4qcPIZhB/oVqkvRVHwYTwpD0HqxkmOP3nETL3Sy06UFQmHkZCsnkZ30w5bBquMqPQ4vvIUKGatIAHXjtQiv8tqSwTAQ2r9iG+hrHpnEXZRB/7ZH4f26zqUCe7tkAf8fFz3O0lZ7Njkt6EDj/ynBtq82RMyPtBsQH/tzCel0UB1jhbK9AAepn4Aq5oW5wxBjXXxrPIqBIUddgbHr48IVfTtB4G0SpEqKhm56FHWG5vcsaB4+cH+v67OYs/3+HfrFZD2kkGPGxj4317Q83ZlcIp/bwKiETV8ez+8z8YRD/J/QKbmrole0M5T5KeNAOdetS9d0RhNKnygFMx75cDSfE7OXys5fhheOdXsLljgvoWqP3FOc7HMeAs/rn/SLrbZlQe5DucyyeQI9u2/elKntmuPfLOQvvX6suwJM7avSEndhrGcdE5x9Z9Shy4GDU4YCmpxRYlfcRpwQK7dn5KpkRLUB9FrgtGRroGdW7XRbFFmXNMJKmDUXLqWx5Ses8pEFY37rBpGi50NcRHzl/ZCAkXboYSS7x1b6hcwNL3w0SfWXbCkuna8/DFwdX7hvDNxiafyZX3GdsXpvQffgbtlZZUSlPbWakzVhV6cZptcV0V0/2HVP+m+azMRt3lbI3l2dfmWhq8l3fJJfkD/D0FsKMD3xVfqZT+xZIYxyWMy0="
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-9, lcov, gcovr]
      env: COMPILER=g++-9 TASK=sonarcloud FLAGS=-DHYPRO_COVERAGE=ON CC=gcc-9 CXX=g++-9
    - os: linux
      compiler: g++-9
      addons:
        apt:
          sources: [*sources_base]
          packages: [*packages_base, g++-9, lcov, gcovr]
      env: COMPILER=g++-9 CC=gcc-9 CXX=g++-9
    - os: linux
      compiler: clang++-5.0
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-5.0]
          packages:
            [*packages_base, clang-5.0 lcov libstdc++-8-dev libc++abi-dev]
      env: COMPILER=clang++-5.0
    - os: linux
      compiler: clang++-6.0
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-6.0]
          packages: [*packages_base, clang-6.0 libc++abi-dev libstdc++-8-dev]
      env: COMPILER=clang++-6.0
    - os: linux
      compiler: clang++-7
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-7]
          packages: [*packages_base, clang-7 libc++abi-dev libstdc++-8-dev]
      env: COMPILER=clang++-7
    - os: linux
      compiler: clang++-8
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-8]
          packages: [*packages_base, clang-8 libc++abi-dev libstdc++-8-dev]
      env: COMPILER=clang++-8 TASK=clang-sanitizer
    - os: linux
      compiler: clang++-9
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-9]
          packages:
            [
              *packages_base,
              clang-9 libc++abi-dev libstdc++-9-dev llvm-symbolizer,
            ]
      env: COMPILER=clang++-9
    - os: linux
      compiler: clang++-10
      addons:
        apt:
          sources: [*sources_base, llvm-toolchain-xenial-10]
          packages: [*packages_base, clang-10 libc++abi-dev libstdc++-10-dev]
      env: COMPILER=clang++-10
    - os: osx
      osx_image: xcode10.1
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode10.3
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode11.1
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
    - os: osx
      osx_image: xcode11.2
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      env: COMPILER=clang++
  allow_failures:
    - os: osx
      env: COMPILER=clang++
      compiler: clang
    - os: linux
      env: COMPILER=clang++-9
    - os: linux
      env: COMPILER=clang++-10

before_install:
  - cd .travis/ && source setupTravis.sh && cd ../
  - sudo motion update || echo 'up to date'

script:
  - cd ${TRAVIS_BUILD_DIR}
  - .travis/build.sh

# Generate and deploy documentation
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - chmod +x .travis/buildDoc.sh
  - ./.travis/buildDoc.sh
  - sonar-scanner
