=====================================
How to generate the parser via AnTLR:
=====================================
@author Phillip Tse
@date 30.5.2018
@date 21.10.2019 (SS, update)

First, make sure that AnTLR is installed.
In the terminal, cd to the folder hypro/src/hypro/parser/antlr4-flowstar (the folder where this file lies in).
Assume you have modified the grammar files in this folder. To newly generate the parser enter the following command:

    antlr4 -Dlanguage=Cpp -package hypro -no-listener -visitor HybridAutomaton.g4

- This command generates HybridAutomatonLexer.h/.cpp and HybridAutomatonParser.h/.cpp
  as well as HybridAutomatonBaseVisitor.h/.cpp.
- The target language is specified via the option -Dlanguage, and is, in the case of Hypro, C++.
  If nothing is specified with this option, AnTLR generates code in Java.
- The option package is supposed to wrap the result in the namespace hypro.
- As AnTLR generates a listener by default, the option -no-listener is used here to prevent the generation of one.
  Hypro uses visitors instead.
- The option -visitor tells AnTLR that HybridAutomatonBaseVisitor.h/.cpp should be generated.
  All visitors used by Hypro inherit from this HybridAutomatonBaseVisitor, thus it is important to not forget this option.
- The actual argument is the grammar file HybridAutomaton.g4, for which a lexer, a parser and a base visitor will be generated.

After this command, compile via make, and everything should work fine (except for some warnings, that can be easily fixed by hand).
