if (TARGET carl-shared)
    set(CARL_OLD_STRUCTURE "True")
else ()
    set(CARL_OLD_STRUCTURE "False")
endif ()

if (NOT EXISTS "${carl_abs_include_path}/carl/core/polynomialfunctions/Substitution.h")
    message(STATUS "Using member substitute function of CArL")
    set(CARL_POLY_MEMBER_SUBSTITUTE "True")
else ()
    message(STATUS "Using static substitute function of CArL")
    unset(CARL_POLY_MEMBER_SUBSTITUTE)
endif ()

if (EXISTS "${carl_INCLUDE_DIR}/carl-arith/interval/SetTheory.h")
    message(STATUS "Using CamelCaseHeaders in CArL")
    set(CARL_CAMEL_CASE_HEADERS "True")
    unset(CARL_SNAKE_CASE_HEADERS)
elseif (EXISTS "${carl_INCLUDE_DIR}/carl-arith/interval/set_theory.h")
    message(STATUS "Using snake-case-headers in CArL")
    set(CARL_SNAKE_CASE_HEADERS "True")
    unset(CARL_CAMEL_CASE_HEADERS)
else ()
    message(SEND_ERROR "Something went wrong with the includes in CArL.")
    unset(CARL_CAMEL_CASE_HEADERS)
    unset(CARL_SNAKE_CASE_HEADERS)
endif ()

#file(STRINGS "${carl_INCLUDE_DIR}/carl/formula/Constraint.h" CARL_VARIABLE_VARIANTS REGEX ".*carlVariables mVariables;.*")
#message(STATUS "Have read: ${CARL_VARIABLE_VARIANTS}")
#if(${carl_VERSION} VERSION_LESS_EQUAL "19.10" )
#	set(CARL_VARIABLE_VARIANTS "True")
#endif()

if (NOT EXISTS "${carl_INCLUDE_DIR}/carl/core/carlLogging.h")
    set(CARL_LOGGING_POST_1910 "True")
    message(STATUS "Carl logging post 19.10")
else ()
    message(STATUS "Carl logging pre 19.10")
endif ()
